{"ast":null,"code":"var _jsxFileName = \"/Users/seanjoyce/Documents/Documents \\u2013 Sean\\u2019s MacBook Air/Udemy/React - The Complete Guide/React Projects/react-complete-guide/src/components/NewExpense/NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //JSX user this under the hood\n\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpense = props => {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const startEditingHandler = () => {\n    setIsEditing(prevState => {\n      return prevState = true;\n    });\n  };\n\n  const stopEditingHandler = prevState => {\n    setIsEditing(prevState => {\n      return prevState = false;\n    });\n  };\n\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = { ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(prevState => {\n      return prevState = false;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [!isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startEditingHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler,\n      onCancel: stopEditingHandler,\n      value: isEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewExpense, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["/Users/seanjoyce/Documents/Documents – Sean’s MacBook Air/Udemy/React - The Complete Guide/React Projects/react-complete-guide/src/components/NewExpense/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpense","props","isEditing","setIsEditing","startEditingHandler","prevState","stopEditingHandler","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAAyC;;AACzC,OAAO,kBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMM,mBAAmB,GAAG,MAAM;AAC9BD,IAAAA,YAAY,CAAEE,SAAD,IAAe;AACxB,aAAQA,SAAS,GAAG,IAApB;AACH,KAFW,CAAZ;AAGH,GAJD;;AAMA,QAAMC,kBAAkB,GAAID,SAAD,IAAe;AACtCF,IAAAA,YAAY,CAAEE,SAAD,IAAe;AACxB,aAAQA,SAAS,GAAG,KAApB;AACH,KAFW,CAAZ;AAGH,GAJD;;AAMA,QAAME,sBAAsB,GAAIC,kBAAD,IAAwB;AACnD,UAAMC,WAAW,GAAG,EAChB,GAAGD,kBADa;AAEhBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFY,KAApB;AAIAZ,IAAAA,KAAK,CAACa,YAAN,CAAmBL,WAAnB;AACAN,IAAAA,YAAY,CAAEE,SAAD,IAAe;AACxB,aAAQA,SAAS,GAAG,KAApB;AACH,KAFW,CAAZ;AAGH,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eACK,CAACH,SAAD,iBACG;AAAQ,MAAA,OAAO,EAAEE,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,EAIKF,SAAS,iBACN,QAAC,WAAD;AACI,MAAA,iBAAiB,EAAEK,sBADvB;AAEI,MAAA,QAAQ,EAAED,kBAFd;AAGI,MAAA,KAAK,EAAEJ;AAHX;AAAA;AAAA;AAAA;AAAA,YALR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAxCD;;GAAMF,U;;KAAAA,U;AA0CN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\"; //JSX user this under the hood\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n    const [isEditing, setIsEditing] = useState(false);\n\n    const startEditingHandler = () => {\n        setIsEditing((prevState) => {\n            return (prevState = true);\n        });\n    };\n\n    const stopEditingHandler = (prevState) => {\n        setIsEditing((prevState) => {\n            return (prevState = false);\n        });\n    };\n\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString(),\n        };\n        props.onAddExpense(expenseData);\n        setIsEditing((prevState) => {\n            return (prevState = false);\n        });\n    };\n\n    return (\n        <div className=\"new-expense\">\n            {!isEditing && (\n                <button onClick={startEditingHandler}>Add New Expense</button>\n            )}\n            {isEditing && (\n                <ExpenseForm\n                    onSaveExpenseData={saveExpenseDataHandler}\n                    onCancel={stopEditingHandler}\n                    value={isEditing}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default NewExpense;\n"]},"metadata":{},"sourceType":"module"}